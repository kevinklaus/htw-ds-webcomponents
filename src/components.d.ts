/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface HtwBerlinBreadcrumb {
    }
    interface HtwBerlinButton {
        /**
          * alternative title
         */
        "altTitle": string;
        /**
          * button color
         */
        "color": "green" | "orange" | "blue" | "disabled";
        /**
          * text to be displayed in button
         */
        "dark": boolean;
        /**
          * href property
         */
        "href": string;
        /**
          * text to be displayed in button
         */
        "text": string;
        /**
          * type
         */
        "type": "default" | "submit";
        /**
          * button variant
         */
        "variant": "filled" | "outlined" | "text";
    }
    interface HtwBerlinContentBox {
        /**
          * pick color to apply to content box of variant color
         */
        "color": "green" | "orange" | "blue";
        /**
          * pick style to apply to content box
         */
        "variant": "default" | "color" | "secondary" | "dark";
    }
    interface HtwBerlinDropdown {
        /**
          * color scheme
         */
        "color": "green" | "orange" | "blue" | "disabled";
        /**
          * use dark mode if true
         */
        "dark": boolean;
        /**
          * use top-menu styling if true
         */
        "topmenu": boolean;
    }
    interface HtwBerlinInput {
        /**
          * alternative title shown on hover
         */
        "altTitle": string;
        /**
          * color applied to the input field
         */
        "color": "green" | "orange" | "blue";
        /**
          * use dark color theme if true
         */
        "dark": boolean;
        /**
          * label text to be displayed above input field
         */
        "label": string;
        /**
          * placeholder text to be displayed in input
         */
        "placeholder": string;
        /**
          * color applied to the input field
         */
        "state": "normal" | "active" | "disabled";
        /**
          * type of input
         */
        "type": string;
    }
    interface HtwBerlinLink {
        /**
          * alternative title
         */
        "altTitle": string;
        /**
          * link color
         */
        "color": "green" | "orange" | "blue" | "disabled";
        /**
          * use dark mode if true
         */
        "dark": boolean;
        /**
          * href property
         */
        "href": string;
        /**
          * uset link state if neccessary
         */
        "state": "default" | "active" | "visited";
        /**
          * text to be displayed in link
         */
        "text": string;
        /**
          * use breadcrumb, dropdown or side-menu styling if neccessary
         */
        "variant": "default" | "side-menu" | "breadcrumb" | "dropdown";
    }
    interface HtwBerlinLogin {
        /**
          * color scheme of login
         */
        "color": "green" | "orange" | "blue";
        /**
          * use dark mode if true
         */
        "dark": boolean;
    }
    interface HtwBerlinLogo {
        /**
          * color scheme
         */
        "color": "green" | "orange" | "blue";
        /**
          * use dark mode if true
         */
        "dark": boolean;
        /**
          * href property
         */
        "href": string;
        /**
          * render logo in different sizes
         */
        "size": "s" | "m" | "l";
    }
    interface HtwBerlinSideMenu {
        /**
          * use dark mode if true
         */
        "dark": boolean;
    }
    interface HtwBerlinTable {
    }
    interface HtwBerlinTopMenu {
        /**
          * color scheme of menu
         */
        "color": "green" | "orange" | "blue";
        /**
          * use dark mode if true
         */
        "dark": boolean;
        /**
          * set to false to hide htw logo
         */
        "logo": boolean;
    }
    interface HtwBerlinTypography {
        /**
          * link color
         */
        "color": "copy" | "green" | "orange" | "blue" | "grey";
        /**
          * use dark mode if true - reverses copy color to white
         */
        "dark": boolean;
        /**
          * uset link state if neccessary
         */
        "fontstyle": "normal" | "bold" |  "italic";
        /**
          * specify the html tag of the typogrphy element
         */
        "tag": "p" | "h1" | "h2" | "h3" | "h4" | "h5" | "span";
    }
}
declare global {
    interface HTMLHtwBerlinBreadcrumbElement extends Components.HtwBerlinBreadcrumb, HTMLStencilElement {
    }
    var HTMLHtwBerlinBreadcrumbElement: {
        prototype: HTMLHtwBerlinBreadcrumbElement;
        new (): HTMLHtwBerlinBreadcrumbElement;
    };
    interface HTMLHtwBerlinButtonElement extends Components.HtwBerlinButton, HTMLStencilElement {
    }
    var HTMLHtwBerlinButtonElement: {
        prototype: HTMLHtwBerlinButtonElement;
        new (): HTMLHtwBerlinButtonElement;
    };
    interface HTMLHtwBerlinContentBoxElement extends Components.HtwBerlinContentBox, HTMLStencilElement {
    }
    var HTMLHtwBerlinContentBoxElement: {
        prototype: HTMLHtwBerlinContentBoxElement;
        new (): HTMLHtwBerlinContentBoxElement;
    };
    interface HTMLHtwBerlinDropdownElement extends Components.HtwBerlinDropdown, HTMLStencilElement {
    }
    var HTMLHtwBerlinDropdownElement: {
        prototype: HTMLHtwBerlinDropdownElement;
        new (): HTMLHtwBerlinDropdownElement;
    };
    interface HTMLHtwBerlinInputElement extends Components.HtwBerlinInput, HTMLStencilElement {
    }
    var HTMLHtwBerlinInputElement: {
        prototype: HTMLHtwBerlinInputElement;
        new (): HTMLHtwBerlinInputElement;
    };
    interface HTMLHtwBerlinLinkElement extends Components.HtwBerlinLink, HTMLStencilElement {
    }
    var HTMLHtwBerlinLinkElement: {
        prototype: HTMLHtwBerlinLinkElement;
        new (): HTMLHtwBerlinLinkElement;
    };
    interface HTMLHtwBerlinLoginElement extends Components.HtwBerlinLogin, HTMLStencilElement {
    }
    var HTMLHtwBerlinLoginElement: {
        prototype: HTMLHtwBerlinLoginElement;
        new (): HTMLHtwBerlinLoginElement;
    };
    interface HTMLHtwBerlinLogoElement extends Components.HtwBerlinLogo, HTMLStencilElement {
    }
    var HTMLHtwBerlinLogoElement: {
        prototype: HTMLHtwBerlinLogoElement;
        new (): HTMLHtwBerlinLogoElement;
    };
    interface HTMLHtwBerlinSideMenuElement extends Components.HtwBerlinSideMenu, HTMLStencilElement {
    }
    var HTMLHtwBerlinSideMenuElement: {
        prototype: HTMLHtwBerlinSideMenuElement;
        new (): HTMLHtwBerlinSideMenuElement;
    };
    interface HTMLHtwBerlinTableElement extends Components.HtwBerlinTable, HTMLStencilElement {
    }
    var HTMLHtwBerlinTableElement: {
        prototype: HTMLHtwBerlinTableElement;
        new (): HTMLHtwBerlinTableElement;
    };
    interface HTMLHtwBerlinTopMenuElement extends Components.HtwBerlinTopMenu, HTMLStencilElement {
    }
    var HTMLHtwBerlinTopMenuElement: {
        prototype: HTMLHtwBerlinTopMenuElement;
        new (): HTMLHtwBerlinTopMenuElement;
    };
    interface HTMLHtwBerlinTypographyElement extends Components.HtwBerlinTypography, HTMLStencilElement {
    }
    var HTMLHtwBerlinTypographyElement: {
        prototype: HTMLHtwBerlinTypographyElement;
        new (): HTMLHtwBerlinTypographyElement;
    };
    interface HTMLElementTagNameMap {
        "htw-berlin-breadcrumb": HTMLHtwBerlinBreadcrumbElement;
        "htw-berlin-button": HTMLHtwBerlinButtonElement;
        "htw-berlin-content-box": HTMLHtwBerlinContentBoxElement;
        "htw-berlin-dropdown": HTMLHtwBerlinDropdownElement;
        "htw-berlin-input": HTMLHtwBerlinInputElement;
        "htw-berlin-link": HTMLHtwBerlinLinkElement;
        "htw-berlin-login": HTMLHtwBerlinLoginElement;
        "htw-berlin-logo": HTMLHtwBerlinLogoElement;
        "htw-berlin-side-menu": HTMLHtwBerlinSideMenuElement;
        "htw-berlin-table": HTMLHtwBerlinTableElement;
        "htw-berlin-top-menu": HTMLHtwBerlinTopMenuElement;
        "htw-berlin-typography": HTMLHtwBerlinTypographyElement;
    }
}
declare namespace LocalJSX {
    interface HtwBerlinBreadcrumb {
    }
    interface HtwBerlinButton {
        /**
          * alternative title
         */
        "altTitle"?: string;
        /**
          * button color
         */
        "color"?: "green" | "orange" | "blue" | "disabled";
        /**
          * text to be displayed in button
         */
        "dark"?: boolean;
        /**
          * href property
         */
        "href"?: string;
        /**
          * text to be displayed in button
         */
        "text"?: string;
        /**
          * type
         */
        "type"?: "default" | "submit";
        /**
          * button variant
         */
        "variant"?: "filled" | "outlined" | "text";
    }
    interface HtwBerlinContentBox {
        /**
          * pick color to apply to content box of variant color
         */
        "color"?: "green" | "orange" | "blue";
        /**
          * pick style to apply to content box
         */
        "variant"?: "default" | "color" | "secondary" | "dark";
    }
    interface HtwBerlinDropdown {
        /**
          * color scheme
         */
        "color"?: "green" | "orange" | "blue" | "disabled";
        /**
          * use dark mode if true
         */
        "dark"?: boolean;
        /**
          * use top-menu styling if true
         */
        "topmenu"?: boolean;
    }
    interface HtwBerlinInput {
        /**
          * alternative title shown on hover
         */
        "altTitle"?: string;
        /**
          * color applied to the input field
         */
        "color"?: "green" | "orange" | "blue";
        /**
          * use dark color theme if true
         */
        "dark"?: boolean;
        /**
          * label text to be displayed above input field
         */
        "label"?: string;
        /**
          * placeholder text to be displayed in input
         */
        "placeholder"?: string;
        /**
          * color applied to the input field
         */
        "state"?: "normal" | "active" | "disabled";
        /**
          * type of input
         */
        "type"?: string;
    }
    interface HtwBerlinLink {
        /**
          * alternative title
         */
        "altTitle"?: string;
        /**
          * link color
         */
        "color"?: "green" | "orange" | "blue" | "disabled";
        /**
          * use dark mode if true
         */
        "dark"?: boolean;
        /**
          * href property
         */
        "href"?: string;
        /**
          * uset link state if neccessary
         */
        "state"?: "default" | "active" | "visited";
        /**
          * text to be displayed in link
         */
        "text"?: string;
        /**
          * use breadcrumb, dropdown or side-menu styling if neccessary
         */
        "variant"?: "default" | "side-menu" | "breadcrumb" | "dropdown";
    }
    interface HtwBerlinLogin {
        /**
          * color scheme of login
         */
        "color"?: "green" | "orange" | "blue";
        /**
          * use dark mode if true
         */
        "dark"?: boolean;
    }
    interface HtwBerlinLogo {
        /**
          * color scheme
         */
        "color"?: "green" | "orange" | "blue";
        /**
          * use dark mode if true
         */
        "dark"?: boolean;
        /**
          * href property
         */
        "href"?: string;
        /**
          * render logo in different sizes
         */
        "size"?: "s" | "m" | "l";
    }
    interface HtwBerlinSideMenu {
        /**
          * use dark mode if true
         */
        "dark"?: boolean;
    }
    interface HtwBerlinTable {
    }
    interface HtwBerlinTopMenu {
        /**
          * color scheme of menu
         */
        "color"?: "green" | "orange" | "blue";
        /**
          * use dark mode if true
         */
        "dark"?: boolean;
        /**
          * set to false to hide htw logo
         */
        "logo"?: boolean;
    }
    interface HtwBerlinTypography {
        /**
          * link color
         */
        "color"?: "copy" | "green" | "orange" | "blue" | "grey";
        /**
          * use dark mode if true - reverses copy color to white
         */
        "dark"?: boolean;
        /**
          * uset link state if neccessary
         */
        "fontstyle"?: "normal" | "bold" |  "italic";
        /**
          * specify the html tag of the typogrphy element
         */
        "tag"?: "p" | "h1" | "h2" | "h3" | "h4" | "h5" | "span";
    }
    interface IntrinsicElements {
        "htw-berlin-breadcrumb": HtwBerlinBreadcrumb;
        "htw-berlin-button": HtwBerlinButton;
        "htw-berlin-content-box": HtwBerlinContentBox;
        "htw-berlin-dropdown": HtwBerlinDropdown;
        "htw-berlin-input": HtwBerlinInput;
        "htw-berlin-link": HtwBerlinLink;
        "htw-berlin-login": HtwBerlinLogin;
        "htw-berlin-logo": HtwBerlinLogo;
        "htw-berlin-side-menu": HtwBerlinSideMenu;
        "htw-berlin-table": HtwBerlinTable;
        "htw-berlin-top-menu": HtwBerlinTopMenu;
        "htw-berlin-typography": HtwBerlinTypography;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "htw-berlin-breadcrumb": LocalJSX.HtwBerlinBreadcrumb & JSXBase.HTMLAttributes<HTMLHtwBerlinBreadcrumbElement>;
            "htw-berlin-button": LocalJSX.HtwBerlinButton & JSXBase.HTMLAttributes<HTMLHtwBerlinButtonElement>;
            "htw-berlin-content-box": LocalJSX.HtwBerlinContentBox & JSXBase.HTMLAttributes<HTMLHtwBerlinContentBoxElement>;
            "htw-berlin-dropdown": LocalJSX.HtwBerlinDropdown & JSXBase.HTMLAttributes<HTMLHtwBerlinDropdownElement>;
            "htw-berlin-input": LocalJSX.HtwBerlinInput & JSXBase.HTMLAttributes<HTMLHtwBerlinInputElement>;
            "htw-berlin-link": LocalJSX.HtwBerlinLink & JSXBase.HTMLAttributes<HTMLHtwBerlinLinkElement>;
            "htw-berlin-login": LocalJSX.HtwBerlinLogin & JSXBase.HTMLAttributes<HTMLHtwBerlinLoginElement>;
            "htw-berlin-logo": LocalJSX.HtwBerlinLogo & JSXBase.HTMLAttributes<HTMLHtwBerlinLogoElement>;
            "htw-berlin-side-menu": LocalJSX.HtwBerlinSideMenu & JSXBase.HTMLAttributes<HTMLHtwBerlinSideMenuElement>;
            "htw-berlin-table": LocalJSX.HtwBerlinTable & JSXBase.HTMLAttributes<HTMLHtwBerlinTableElement>;
            "htw-berlin-top-menu": LocalJSX.HtwBerlinTopMenu & JSXBase.HTMLAttributes<HTMLHtwBerlinTopMenuElement>;
            "htw-berlin-typography": LocalJSX.HtwBerlinTypography & JSXBase.HTMLAttributes<HTMLHtwBerlinTypographyElement>;
        }
    }
}
